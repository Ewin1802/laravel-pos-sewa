{
	"info": {
		"_postman_id": "pos-subscription-api-2025",
		"name": "POS Subscription API",
		"description": "Complete API collection for POS Subscription Backend System\n\n## Base URL\n- Development: http://localhost\n- Production: Update base URL as needed\n\n## Authentication\nMost endpoints require Bearer token authentication.\n\n## Usage Flow\n1. Register merchant\n2. Login to get token\n3. Start trial or checkout subscription\n4. Register device and get license\n5. Validate license for POS operations\n\n## Variables\n- `base_url`: http://localhost\n- `token`: Bearer token from login\n- `merchant_id`: Current merchant ID\n- `device_id`: Registered device ID",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register Merchant",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"John Doe\",\n    \"email\": \"merchant@example.com\",\n    \"password\": \"password123\",\n    \"password_confirmation\": \"password123\",\n    \"business_name\": \"My Store\",\n    \"business_type\": \"retail\",\n    \"phone\": \"+6281234567890\",\n    \"address\": \"Jl. Sudirman No. 123, Jakarta\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/register-merchant",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register-merchant"
							]
						},
						"description": "Register a new merchant account"
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.success && response.data.token) {",
									"        pm.collectionVariables.set('token', response.data.token);",
									"        pm.collectionVariables.set('merchant_id', response.data.user.merchant_id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"merchant@example.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						},
						"description": "Login and get authentication token"
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/auth/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"logout"
							]
						},
						"description": "Logout and invalidate token"
					},
					"response": []
				}
			],
			"description": "Authentication endpoints for merchant registration, login, and logout"
		},
		{
			"name": "Plans",
			"item": [
				{
					"name": "Get All Plans",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/plans",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"plans"
							]
						},
						"description": "Get all available subscription plans"
					},
					"response": []
				}
			],
			"description": "Subscription plans management"
		},
		{
			"name": "Trial Management",
			"item": [
				{
					"name": "Start Trial",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.success && response.data.subscription) {",
									"        pm.collectionVariables.set('subscription_id', response.data.subscription.id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"plan_id\": 1\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/trial/start",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"trial",
								"start"
							]
						},
						"description": "Start a trial subscription for a specific plan"
					},
					"response": []
				},
				{
					"name": "Get Trial Status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/trial/status",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"trial",
								"status"
							]
						},
						"description": "Get current trial status for the merchant"
					},
					"response": []
				},
				{
					"name": "Convert Trial to Paid",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/trial/convert",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"trial",
								"convert"
							]
						},
						"description": "Convert trial subscription to paid subscription"
					},
					"response": []
				}
			],
			"description": "Trial subscription management"
		},
		{
			"name": "Checkout & Payment",
			"item": [
				{
					"name": "Checkout Subscription",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.success && response.data.invoice) {",
									"        pm.collectionVariables.set('invoice_id', response.data.invoice.id);",
									"        pm.collectionVariables.set('subscription_id', response.data.subscription.id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"plan_id\": 1\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/checkout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"checkout"
							]
						},
						"description": "Checkout a subscription plan and create invoice"
					},
					"response": []
				},
				{
					"name": "Get Checkout Status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/checkout/status",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"checkout",
								"status"
							]
						},
						"description": "Get current checkout/payment status"
					},
					"response": []
				},
				{
					"name": "Cancel Checkout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/checkout/cancel",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"checkout",
								"cancel"
							]
						},
						"description": "Cancel pending checkout/subscription"
					},
					"response": []
				}
			],
			"description": "Checkout and payment processing"
		},
		{
			"name": "Payment Confirmations",
			"item": [
				{
					"name": "Submit Payment Confirmation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "invoice_id",
									"value": "{{invoice_id}}",
									"type": "text"
								},
								{
									"key": "amount",
									"value": "199000",
									"type": "text",
									"description": "Amount in IDR (not cents)"
								},
								{
									"key": "bank_name",
									"value": "BCA",
									"type": "text"
								},
								{
									"key": "reference_no",
									"value": "TRX123456789",
									"type": "text"
								},
								{
									"key": "notes",
									"value": "Payment via mobile banking",
									"type": "text"
								},
								{
									"key": "evidence_file",
									"type": "file",
									"description": "Upload payment evidence (jpg, jpeg, png, pdf - max 5MB)"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/v1/payment-confirmations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"payment-confirmations"
							]
						},
						"description": "Submit payment confirmation with evidence file"
					},
					"response": []
				},
				{
					"name": "Get Payment Confirmations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/payment-confirmations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"payment-confirmations"
							]
						},
						"description": "Get merchant's payment confirmations history"
					},
					"response": []
				}
			],
			"description": "Payment confirmation submission and tracking"
		},
		{
			"name": "Subscription Management",
			"item": [
				{
					"name": "Get Subscription Status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/subscription/status",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"subscription",
								"status"
							]
						},
						"description": "Get current subscription status and details"
					},
					"response": []
				}
			],
			"description": "Subscription status and management"
		},
		{
			"name": "Device Management",
			"item": [
				{
					"name": "Register Device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.success && response.data.device) {",
									"        pm.collectionVariables.set('device_id', response.data.device.id);",
									"        pm.collectionVariables.set('device_uuid', response.data.device.device_uuid);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"device_name\": \"POS Terminal 1\",\n    \"device_uuid\": \"DEVICE-UUID-12345\",\n    \"device_type\": \"pos_terminal\",\n    \"os_version\": \"Windows 10\",\n    \"app_version\": \"1.0.0\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/devices/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"devices",
								"register"
							]
						},
						"description": "Register a new POS device"
					},
					"response": []
				}
			],
			"description": "Device registration and management"
		},
		{
			"name": "License Management",
			"item": [
				{
					"name": "Issue License",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.success && response.data.license_token) {",
									"        pm.collectionVariables.set('license_token', response.data.license_token);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"device_uuid\": \"{{device_uuid}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/license/issue",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"license",
								"issue"
							]
						},
						"description": "Issue a license token for a registered device"
					},
					"response": []
				},
				{
					"name": "Validate License",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"license_token\": \"{{license_token}}\",\n    \"device_uuid\": \"{{device_uuid}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/license/validate",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"license",
								"validate"
							]
						},
						"description": "Validate license token for POS operations"
					},
					"response": []
				},
				{
					"name": "Refresh License",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"device_uuid\": \"{{device_uuid}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/license/refresh",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"license",
								"refresh"
							]
						},
						"description": "Refresh license token for a device"
					},
					"response": []
				}
			],
			"description": "License token management for POS devices"
		},
		{
			"name": "CSRF & Security",
			"item": [
				{
					"name": "Get CSRF Cookie",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/sanctum/csrf-cookie",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"sanctum",
								"csrf-cookie"
							]
						},
						"description": "Get CSRF cookie for web-based authentication"
					},
					"response": []
				}
			],
			"description": "Security and CSRF protection endpoints"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Auto-set base URL if not set",
					"if (!pm.collectionVariables.get('base_url')) {",
					"    pm.collectionVariables.set('base_url', 'http://localhost');",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global test scripts can be added here",
					"pm.test('Response time is less than 5000ms', function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(5000);",
					"});",
					"",
					"pm.test('Response has valid JSON structure', function () {",
					"    pm.response.to.have.jsonBody();",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost",
			"type": "string"
		},
		{
			"key": "token",
			"value": "",
			"type": "string"
		},
		{
			"key": "merchant_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "device_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "device_uuid",
			"value": "",
			"type": "string"
		},
		{
			"key": "subscription_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "invoice_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "license_token",
			"value": "",
			"type": "string"
		}
	]
}
